// Layout SCSS - FilterQL Design System
// =============================================================================

// Base Layout
// -----------------------------------------------------------------------------
.site-layout {
  display: flex;
  flex-direction: column;
  min-height: 100vh;
}

.site-header {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  z-index: map-get($z-index, fixed);
  height: $header-height;
  background: rgba(255, 255, 255, 0.95);
  backdrop-filter: blur(8px);
  border-bottom: 1px solid $border-color;
  transition: $transition-colors;

  .dark & {
    background: rgba($dark-bg-color, 0.95);
    border-bottom-color: $dark-border-color;
  }
}

.site-main {
  flex: 1;
  margin-top: $header-height;
  
  @media (min-width: map-get($breakpoints, lg)) {
    margin-left: $sidebar-width;
  }
}

.site-footer {
  margin-top: auto;
}

// Sidebar Layout
// -----------------------------------------------------------------------------
.sidebar {
  position: fixed;
  top: $header-height;
  left: 0;
  width: $sidebar-width;
  height: calc(100vh - #{$header-height});
  background: $bg-color;
  border-right: 1px solid $border-color;
  z-index: map-get($z-index, sticky);
  transform: translateX(-100%);
  transition: transform $animation-duration-normal $animation-ease-in-out;
  overflow-y: auto;

  .dark & {
    background: $dark-bg-color;
    border-right-color: $dark-border-color;
  }

  @media (min-width: map-get($breakpoints, lg)) {
    transform: translateX(0);
  }

  &.open {
    transform: translateX(0);
  }
}

// Content Layout
// -----------------------------------------------------------------------------
.content-wrapper {
  max-width: 1200px;
  margin: 0 auto;
  padding: map-get($spacing, 8) map-get($spacing, 4);

  @media (min-width: map-get($breakpoints, sm)) {
    padding: map-get($spacing, 8) map-get($spacing, 6);
  }

  @media (min-width: map-get($breakpoints, lg)) {
    padding: map-get($spacing, 8);
  }
}

.content-grid {
  display: grid;
  gap: map-get($spacing, 8);

  @media (min-width: map-get($breakpoints, lg)) {
    grid-template-columns: 1fr 250px;
    gap: map-get($spacing, 12);
  }
}

// Container utilities
// -----------------------------------------------------------------------------
.container {
  width: 100%;
  margin: 0 auto;
  padding: 0 map-get($spacing, 4);

  @media (min-width: map-get($breakpoints, sm)) {
    max-width: map-get($breakpoints, sm);
    padding: 0 map-get($spacing, 6);
  }

  @media (min-width: map-get($breakpoints, md)) {
    max-width: map-get($breakpoints, md);
  }

  @media (min-width: map-get($breakpoints, lg)) {
    max-width: map-get($breakpoints, lg);
    padding: 0 map-get($spacing, 8);
  }

  @media (min-width: map-get($breakpoints, xl)) {
    max-width: map-get($breakpoints, xl);
  }

  @media (min-width: map-get($breakpoints, 2xl)) {
    max-width: map-get($breakpoints, 2xl);
  }
}

// Grid utilities
// -----------------------------------------------------------------------------
.grid {
  display: grid;
}

.grid-cols-1 { grid-template-columns: repeat(1, minmax(0, 1fr)); }
.grid-cols-2 { grid-template-columns: repeat(2, minmax(0, 1fr)); }
.grid-cols-3 { grid-template-columns: repeat(3, minmax(0, 1fr)); }
.grid-cols-4 { grid-template-columns: repeat(4, minmax(0, 1fr)); }

@media (min-width: map-get($breakpoints, md)) {
  .md\:grid-cols-2 { grid-template-columns: repeat(2, minmax(0, 1fr)); }
  .md\:grid-cols-3 { grid-template-columns: repeat(3, minmax(0, 1fr)); }
  .md\:grid-cols-4 { grid-template-columns: repeat(4, minmax(0, 1fr)); }
}

@media (min-width: map-get($breakpoints, lg)) {
  .lg\:grid-cols-2 { grid-template-columns: repeat(2, minmax(0, 1fr)); }
  .lg\:grid-cols-3 { grid-template-columns: repeat(3, minmax(0, 1fr)); }
  .lg\:grid-cols-4 { grid-template-columns: repeat(4, minmax(0, 1fr)); }
}

// Gap utilities
// -----------------------------------------------------------------------------
.gap-4 { gap: map-get($spacing, 4); }
.gap-6 { gap: map-get($spacing, 6); }
.gap-8 { gap: map-get($spacing, 8); }

// Flex utilities
// -----------------------------------------------------------------------------
.flex { display: flex; }
.flex-col { flex-direction: column; }
.flex-row { flex-direction: row; }
.flex-wrap { flex-wrap: wrap; }
.flex-1 { flex: 1 1 0%; }
.flex-auto { flex: 1 1 auto; }
.flex-none { flex: none; }

.items-start { align-items: flex-start; }
.items-center { align-items: center; }
.items-end { align-items: flex-end; }
.items-stretch { align-items: stretch; }

.justify-start { justify-content: flex-start; }
.justify-center { justify-content: center; }
.justify-end { justify-content: flex-end; }
.justify-between { justify-content: space-between; }
.justify-around { justify-content: space-around; }

// Responsive flex utilities
@media (min-width: map-get($breakpoints, sm)) {
  .sm\:flex-row { flex-direction: row; }
  .sm\:flex-col { flex-direction: column; }
}

@media (min-width: map-get($breakpoints, md)) {
  .md\:flex-row { flex-direction: row; }
  .md\:flex-col { flex-direction: column; }
}

@media (min-width: map-get($breakpoints, lg)) {
  .lg\:flex-row { flex-direction: row; }
  .lg\:flex-col { flex-direction: column; }
}

// Spacing utilities
// -----------------------------------------------------------------------------
@each $key, $value in $spacing {
  .m-#{$key} { margin: $value; }
  .mt-#{$key} { margin-top: $value; }
  .mr-#{$key} { margin-right: $value; }
  .mb-#{$key} { margin-bottom: $value; }
  .ml-#{$key} { margin-left: $value; }
  .mx-#{$key} { margin-left: $value; margin-right: $value; }
  .my-#{$key} { margin-top: $value; margin-bottom: $value; }

  .p-#{$key} { padding: $value; }
  .pt-#{$key} { padding-top: $value; }
  .pr-#{$key} { padding-right: $value; }
  .pb-#{$key} { padding-bottom: $value; }
  .pl-#{$key} { padding-left: $value; }
  .px-#{$key} { padding-left: $value; padding-right: $value; }
  .py-#{$key} { padding-top: $value; padding-bottom: $value; }
}

// Display utilities
// -----------------------------------------------------------------------------
.hidden { display: none; }
.block { display: block; }
.inline { display: inline; }
.inline-block { display: inline-block; }

@media (min-width: map-get($breakpoints, lg)) {
  .lg\:hidden { display: none; }
  .lg\:block { display: block; }
  .lg\:inline { display: inline; }
  .lg\:inline-block { display: inline-block; }
}

// Position utilities
// -----------------------------------------------------------------------------
.relative { position: relative; }
.absolute { position: absolute; }
.fixed { position: fixed; }
.sticky { position: sticky; }

// Text utilities
// -----------------------------------------------------------------------------
.text-left { text-align: left; }
.text-center { text-align: center; }
.text-right { text-align: right; }

.text-xs { font-size: $text-xs; }
.text-sm { font-size: $text-sm; }
.text-base { font-size: $text-base; }
.text-lg { font-size: $text-lg; }
.text-xl { font-size: $text-xl; }
.text-2xl { font-size: $text-2xl; }
.text-3xl { font-size: $text-3xl; }
.text-4xl { font-size: $text-4xl; }

.font-light { font-weight: $font-light; }
.font-normal { font-weight: $font-normal; }
.font-medium { font-weight: $font-medium; }
.font-semibold { font-weight: $font-semibold; }
.font-bold { font-weight: $font-bold; }

.font-inter { font-family: $font-family-sans; }
.font-mono { font-family: $font-family-mono; }

// Overflow utilities
// -----------------------------------------------------------------------------
.overflow-hidden { overflow: hidden; }
.overflow-auto { overflow: auto; }
.overflow-y-auto { overflow-y: auto; }
.overflow-x-auto { overflow-x: auto; }